---
services:
  keycloak:
    # image: quay.io/keycloak/keycloak:24.0.3
    # command: start
    build: .
    command: start --optimized -Djgroups.dns.query=keycloak
    restart: unless-stopped
    environment:
      KC_CACHE: ispn
      KC_CACHE_STACK: kubernetes
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: supersecretpassword
      KC_HOSTNAME_URL: https://keycloak.traefik.me/
      KC_PROXY: edge
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`keycloak.traefik.me`)"
      - "traefik.http.routers.keycloak.tls=true"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
      - "traefik.http.services.keycloak.loadbalancer.server.scheme=http"
    volumes:
      - "./import:/opt/keycloak/data/import"
      - "./themes:/opt/keycloak/themes"
    depends_on:
      db:
        condition: service_started
    deploy:
      replicas: 2
      endpoint_mode: dnsrr

  traefik:
    image: "traefik:v3.0.0"
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.traefik.me`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    volumes:
      - ./certs:/etc/ssl/traefik
      - ./tls.yml:/etc/traefik/tls.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - "--log.level=DEBUG"
      - "--accesslog"
      - "--api"
      - "--api.dashboard"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.filename=/etc/traefik/tls.yml"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.http.http.redirections.entryPoint.to=https"
      - "--entrypoints.http.http.redirections.entryPoint.scheme=https"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      default:
        aliases:
          - keycloak.traefik.me
    depends_on:
      cert-helper:
        condition: service_completed_successfully

  mailcatcher:
    image: "sj26/mailcatcher:v0.9.0"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailcatcher.rule=Host(`mailcatcher.traefik.me`)"
      - "traefik.http.routers.mailcatcher.tls=true"
      - "traefik.http.services.mailcatcher.loadbalancer.server.port=1080"
      - "traefik.http.services.mailcatcher.loadbalancer.server.scheme=http"

  db:
    image: postgres:16.2
    restart: unless-stopped
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: supersecretpassword
    volumes:
      - ./db:/var/lib/postgresql/data
  cert-helper:
    image: alpine:3.19
    working_dir: /certs
    command:  |
        sh -c "
        (test -f cert.pem || wget traefik.me/cert.pem -nc -O cert.pem) &&
        (test -f privkey.pem || wget traefik.me/privkey.pem -nc -O privkey.pem) "
    volumes:
      - ./certs:/certs
